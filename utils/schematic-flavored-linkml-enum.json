{ "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "title": "meta",
  "properties": {
    "enums": { 
      "type": "object",
      "patternProperties": {
        "[A-Za-z0-9]+": { "$ref": "#/$defs/EnumDefinition" }
      }
    }
  },
  "$defs": {
    "EnumDefinition": {
        "additionalProperties": false,
        "description": "an element whose instances must be drawn from a specified set of permissible values",
        "properties": {
            "aliases": {
                "description": "Alternate names/labels for the element. These do not alter the semantics of the schema, but may be useful to support search and alignment.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "broad_mappings": {
                "description": "A list of terms from different schemas or terminology systems that have broader meaning.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "close_mappings": {
                "description": "A list of terms from different schemas or terminology systems that have close meaning.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "comments": {
                "description": "notes and comments about an element intended primarily for external consumption",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "concepts": {
                "description": "A list of identifiers that are used to construct a set of permissible values",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "conforms_to": {
                "description": "An established standard to which the element conforms.",
                "type": "string"
            },
            "definition_uri": {
                "description": "The native URI of the element. This is always within the namespace of the containing schema. Contrast with the assigned URI, via class_uri or slot_uri",
                "type": "string"
            },
            "deprecated": {
                "description": "Description of why and when this element will no longer be used",
                "type": "string"
            },
            "deprecated_element_has_exact_replacement": {
                "description": "When an element is deprecated, it can be automatically replaced by this uri or curie",
                "type": "string"
            },
            "deprecated_element_has_possible_replacement": {
                "description": "When an element is deprecated, it can be potentially replaced by this uri or curie",
                "type": "string"
            },
            "description": {
                "description": "a textual description of the element's purpose and use",
                "type": "string"
            },
            "enum_uri": {
                "description": "URI of the enum that provides a semantic interpretation of the element in a linked data context. The URI may come from any namespace and may be shared between schemas",
                "type": "string"
            },
            "exact_mappings": {
                "description": "A list of terms from different schemas or terminology systems that have identical meaning.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "in_subset": {
                "description": "used to indicate membership of a term in a defined subset of terms used for a particular domain or application.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "inherits": {
                "description": "An enum definition that is used as the basis to create a new enum",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "is_a": {
                "description": "A primary parent class or slot from which inheritable metaslots are propagated from. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is a and mixins are recursively unfolded",
                "type": "string"
            },
            "last_updated_on": {
                "description": "time at which the element was last updated",
                "format": "date-time",
                "type": "string"
            },
            "mappings": {
                "description": "A list of terms from different schemas or terminology systems that have comparable meaning. These may include terms that are precisely equivalent, broader or narrower in meaning, or otherwise semantically related but not equivalent from a strict ontological perspective.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "name": {
                "description": "the unique name of the element within the context of the schema.  Name is combined with the default prefix to form the globally unique subject of the target class.",
                "type": "string"
            },
            "narrow_mappings": {
                "description": "A list of terms from different schemas or terminology systems that have narrower meaning.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "notes": {
                "description": "editorial notes about an element intended primarily for internal consumption",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "permissible_values": {
                "additionalProperties": {
                    "$ref": "#/$defs/PermissibleValue__identifier_optional"
                },
                "description": "A list of possible values for a slot range",
                "type": "object"
            },
            "rank": {
                "description": "the relative order in which the element occurs, lower values are given precedence",
                "type": "integer"
            },
            "related_mappings": {
                "description": "A list of terms from different schemas or terminology systems that have related meaning.",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "see_also": {
                "description": "A list of related entities or URLs that may be of relevance",
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "source": {
                "description": "A related resource from which the element is derived.",
                "type": "string"
            },
            "status": {
                "description": "status of the element",
                "type": "string"
            },
            "title": {
                "description": "A concise human-readable display label for the element. The title should mirror the name, and should use ordinary textual punctuation.",
                "type": "string"
            },
            "todos": {
                "description": "Outstanding issues that needs resolution",
                "items": {
                    "type": "string"
                },
                "type": "array"
            }
        },
        "required": [
        ],
        "title": "EnumDefinition",
        "type": "object"
        },
        "PermissibleValue__identifier_optional": {
            "additionalProperties": false,
            "description": "a permissible value, accompanied by intended text and an optional mapping to a concept URI",
            "properties": {
                "aliases": {
                    "description": "Alternate names/labels for the element. These do not alter the semantics of the schema, but may be useful to support search and alignment.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "broad_mappings": {
                    "description": "A list of terms from different schemas or terminology systems that have broader meaning.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "close_mappings": {
                    "description": "A list of terms from different schemas or terminology systems that have close meaning.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "comments": {
                    "description": "notes and comments about an element intended primarily for external consumption",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "created_by": {
                    "description": "agent that created the element",
                    "type": "string"
                },
                "created_on": {
                    "description": "time at which the element was created",
                    "format": "date-time",
                    "type": "string"
                },
                "deprecated": {
                    "description": "Description of why and when this element will no longer be used",
                    "type": "string"
                },
                "deprecated_element_has_exact_replacement": {
                    "description": "When an element is deprecated, it can be automatically replaced by this uri or curie",
                    "type": "string"
                },
                "deprecated_element_has_possible_replacement": {
                    "description": "When an element is deprecated, it can be potentially replaced by this uri or curie",
                    "type": "string"
                },
                "description": {
                    "description": "a textual description of the element's purpose and use",
                    "type": "string"
                },
                "exact_mappings": {
                    "description": "A list of terms from different schemas or terminology systems that have identical meaning.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "from_schema": {
                    "description": "id of the schema that defined the element",
                    "type": "string"
                },
                "imported_from": {
                    "description": "the imports entry that this element was derived from.  Empty means primary source",
                    "type": "string"
                },
                "in_language": {
                    "description": "the primary language used in the sources",
                    "type": "string"
                },
                "in_subset": {
                    "description": "used to indicate membership of a term in a defined subset of terms used for a particular domain or application.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "last_updated_on": {
                    "description": "time at which the element was last updated",
                    "format": "date-time",
                    "type": "string"
                },
                "mappings": {
                    "description": "A list of terms from different schemas or terminology systems that have comparable meaning. These may include terms that are precisely equivalent, broader or narrower in meaning, or otherwise semantically related but not equivalent from a strict ontological perspective.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "meaning": {
                    "description": "the value meaning of a permissible value",
                    "type": "string"
                },
                "modified_by": {
                    "description": "agent that modified the element",
                    "type": "string"
                },
                "narrow_mappings": {
                    "description": "A list of terms from different schemas or terminology systems that have narrower meaning.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "notes": {
                    "description": "editorial notes about an element intended primarily for internal consumption",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rank": {
                    "description": "the relative order in which the element occurs, lower values are given precedence",
                    "type": "integer"
                },
                "related_mappings": {
                    "description": "A list of terms from different schemas or terminology systems that have related meaning.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "see_also": {
                    "description": "A list of related entities or URLs that may be of relevance",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source": {
                    "description": "A related resource from which the element is derived.",
                    "type": "string"
                },
                "status": {
                    "description": "status of the element",
                    "type": "string"
                },
                "text": {
                    "description": "The actual permissible value itself",
                    "type": "string"
                },
                "title": {
                    "description": "A concise human-readable display label for the element. The title should mirror the name, and should use ordinary textual punctuation.",
                    "type": "string"
                },
                "todos": {
                    "description": "Outstanding issues that needs resolution",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unit": {
                    "$ref": "#/$defs/UnitOfMeasure",
                    "description": "an encoding of a unit"
                }
            },
            "required": [],
            "title": "PermissibleValue",
            "type": "object"
        },
        "UnitOfMeasure": {
            "additionalProperties": false,
            "description": "A unit of measure, or unit, is a particular quantity value that has been chosen as a scale for measuring other quantities the same kind (more generally of equivalent dimension).",
            "properties": {
                "derivation": {
                    "description": "Expression for deriving this unit from other units",
                    "type": "string"
                },
                "exact_mappings": {
                    "description": "Used to link a unit to equivalent concepts in ontologies such as UO, SNOMED, OEM, OBOE, NCIT",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "has_quantity_kind": {
                    "description": "Concept in a vocabulary or ontology that denotes the kind of quanity being measured, e.g. length",
                    "type": "string"
                },
                "iec61360code": {
                    "type": "string"
                },
                "symbol": {
                    "description": "name of the unit encoded as a symbol",
                    "type": "string"
                },
                "ucum_code": {
                    "description": "associates a QUDT unit with its UCUM code (case-sensitive).",
                    "type": "string"
                }
            },
            "title": "UnitOfMeasure",
            "type": "object"
        }
    }
}
