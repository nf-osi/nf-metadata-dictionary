name: Extract Synonyms

on:
  release:
    types: [published]
  workflow_dispatch:  # Allows manual triggering
    inputs:
      test_mode:
        description: 'Run in test mode'
        required: false
        type: boolean
        default: false

jobs:
  extract-synonyms:
    runs-on: ubuntu-latest
    timeout-minutes: 65  # Set job timeout to 65 minutes
    permissions:
                   contents: write  # Allow the workflow to push changes back to the repository
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          # cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml requests rdflib tqdm

      - name: Run synonym extraction
        run: |
          echo "Starting synonym extraction with timeout handling..."
          timeout 3600 python utils/extract_synonyms.py || {
            exit_code=$?
            if [ $exit_code -eq 124 ]; then
              echo "Synonym extraction timed out after 60 minutes, but partial results may be available"
            else
              echo "Synonym extraction failed with exit code: $exit_code"
            fi
            exit $exit_code
          }
        continue-on-error: true  # Continue even if script fails

      - name: Check if CSV was created
        run: |
          if [ ! -f term_synonyms.csv ]; then
            echo "Error: term_synonyms.csv was not created"
            exit 1
          fi
          echo "CSV file was created successfully"

      - name: Inject synonyms into modules
        run: python utils/inject_synonyms.py --csv term_synonyms.csv --modules-dir modules
        continue-on-error: false  # Fail if injection fails

      - name: Check if changes were made
        run: |
          # Check if CSV file exists and has content
          if [ ! -f term_synonyms.csv ] || [ ! -s term_synonyms.csv ]; then
            echo "No valid CSV file created"
            echo "changes_made=false" >> $GITHUB_ENV
          elif git diff --exit-code modules/ term_synonyms.csv 2>/dev/null; then
            echo "No changes made to modules or CSV"
            echo "changes_made=false" >> $GITHUB_ENV
          else
            echo "Changes detected - CSV created and/or module files updated"
            git diff --stat modules/ term_synonyms.csv 2>/dev/null || true
            echo "changes_made=true" >> $GITHUB_ENV
          fi

      - name: Create Pull Request with synonym updates
        if: env.changes_made == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Auto-update synonym data and module files
            
            - Updated term_synonyms.csv with extracted synonyms
            - Injected aliases into module YAML files
            - Applied intelligent filtering to avoid duplicates
          title: "Auto-update synonyms: Extract and inject synonym data"
          body: |
            ## 🔄 Automated Synonym Update
            
            This PR contains automatically extracted and processed synonym data:
            
            ### Changes Made
            - **📊 Synonym CSV**: Updated `term_synonyms.csv` with latest extracted synonyms
            - **📁 Module Files**: Injected aliases into relevant module YAML files in `modules/` directory
            - **🧹 Quality Filtering**: Applied intelligent deduplication and filtering
            
            ### Review Checklist
            - [ ] Check `term_synonyms.csv` for data quality and completeness
            - [ ] Review alias additions in modified module files
            - [ ] Verify no unwanted synonyms were added
            - [ ] Confirm aliases enhance searchability without adding noise
            
            ### Technical Details
            - Synonyms extracted from ontology sources with timeout handling
            - Case-only differences filtered out (e.g., "3D imaging" vs "3-D Imaging")
            - Fuzzy matching applied to remove near-duplicates (90% similarity threshold)
            - Only high-quality aliases added to preserve metadata integrity
            
            **Workflow Run**: ${{ github.run_id }}
            **Triggered by**: ${{ github.event_name }}
          branch: synonym-update-${{ github.run_id }}
          delete-branch: true
          labels: |
            automated
            synonyms
            data-update

      - name: Upload workflow artifacts
        if: always()  # Upload artifacts even if workflow fails
        uses: actions/upload-artifact@v4
        with:
          name: synonym-extraction-results-${{ github.run_id }}
          path: |
            term_synonyms.csv
          if-no-files-found: warn
          retention-days: 30

      - name: Workflow Summary
        if: always()
        run: |
          echo "## Synonym Extraction Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ env.changes_made }}" = "true" ]; then
            echo "✅ **Success**: Synonym data extracted and PR created for review" >> $GITHUB_STEP_SUMMARY
            echo "- 📊 CSV file: term_synonyms.csv updated" >> $GITHUB_STEP_SUMMARY
            echo "- 📁 Module files: Updated with new aliases" >> $GITHUB_STEP_SUMMARY
            echo "- 🔄 Pull Request: Created for review (branch: synonym-update-${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          elif [ -f term_synonyms.csv ]; then
            echo "⚠️ **Partial Success**: CSV created but no module changes needed" >> $GITHUB_STEP_SUMMARY
            echo "- 📊 CSV file: term_synonyms.csv available as artifact" >> $GITHUB_STEP_SUMMARY
            echo "- 📁 Module files: No updates required" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **No Changes**: No synonym data extracted" >> $GITHUB_STEP_SUMMARY
            echo "- This may be due to extraction timeouts or no matching terms found" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- Run ID: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "- Trigger: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Artifacts available for 30 days" >> $GITHUB_STEP_SUMMARY 
