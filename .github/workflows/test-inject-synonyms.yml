# .github/workflows/test-inject-synonyms.yml

name: "Test Synonym Injection Workflow"

# Only allow manual dispatch:
on:
  workflow_dispatch:
    inputs:
      target-branch:
        description: 'Branch to run this workflow on'
        required: true
        default: 'github-action-synoynms'
      test_mode:
        description: 'Run in test mode (dry-run)'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
      csv_file:
        description: 'CSV file to use for synonyms'
        required: false
        default: 'term_synonyms.csv'

jobs:
  test-injection:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from chosen branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.target-branch }}

      - name: Print branch info
        run: |
          echo "Running on branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "Latest commit:"
          git log -1 --pretty=oneline
          echo "Test mode: ${{ github.event.inputs.test_mode }}"
          echo "CSV file: ${{ github.event.inputs.csv_file }}"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml requests rdflib tqdm difflib

      - name: Check CSV file exists
        run: |
          if [ -f "${{ github.event.inputs.csv_file }}" ]; then
            echo "‚úÖ CSV file found: ${{ github.event.inputs.csv_file }}"
            echo "CSV preview:"
            head -5 "${{ github.event.inputs.csv_file }}"
            echo "Total lines: $(wc -l < ${{ github.event.inputs.csv_file }})"
          else
            echo "‚ùå CSV file not found: ${{ github.event.inputs.csv_file }}"
            echo "Available CSV files:"
            find . -name "*.csv" -type f || echo "No CSV files found"
            exit 1
          fi

      - name: Run synonym injection
        run: |
          echo "üöÄ Starting synonym injection..."
          if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
            echo "Running in test mode (dry-run)"
            python utils/inject_synonyms.py --csv "${{ github.event.inputs.csv_file }}" --modules-dir modules --dry-run
          else
            echo "Running in production mode"
            python utils/inject_synonyms.py --csv "${{ github.event.inputs.csv_file }}" --modules-dir modules
          fi

      - name: Check for changes
        if: github.event.inputs.test_mode == 'false'
        run: |
          if git diff --exit-code modules/; then
            echo "‚ÑπÔ∏è No changes made to modules"
            echo "changes_made=false" >> $GITHUB_ENV
          else
            echo "‚úÖ Module files were successfully updated"
            git diff --stat modules/
            echo "changes_made=true" >> $GITHUB_ENV
          fi

      - name: Show what would happen in production
        if: github.event.inputs.test_mode == 'true'
        run: |
          echo "üí° This was a test run. No files were modified."
          echo "To apply changes, run this workflow with test_mode=false"

      - name: Summary
        run: |
          echo "üèÅ Workflow completed successfully!"
          echo "Branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "Test mode: ${{ github.event.inputs.test_mode }}"
          echo "CSV file: ${{ github.event.inputs.csv_file }}"
          if [ "${{ github.event.inputs.test_mode }}" = "false" ]; then
            echo "Changes made: ${changes_made:-unknown}"
          fi
