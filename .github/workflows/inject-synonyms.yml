name: Inject Synonyms

on:
  workflow_dispatch:  # Allows manual triggering
    inputs:
      csv_file:
        description: 'Path to synonym CSV file (default: term_synonyms.csv)'
        required: false
        type: string
        default: 'term_synonyms.csv'
      test_mode:
        description: 'Run in test mode with dry-run'
        required: false
        type: boolean
        default: false

jobs:
  inject-synonyms:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Short timeout for injection only
    permissions:
      contents: write  # Allow the workflow to push changes back to the repository
      pull-requests: write  # Allow creating pull requests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Verify CSV file exists
        run: |
          CSV_FILE="${{ github.event.inputs.csv_file || 'term_synonyms.csv' }}"
          if [ ! -f "$CSV_FILE" ]; then
            echo "Error: CSV file '$CSV_FILE' not found"
            echo "Available files:"
            ls -la *.csv || echo "No CSV files found"
            exit 1
          fi
          
          echo "Found CSV file: $CSV_FILE"
          echo "CSV file size: $(wc -l < "$CSV_FILE") lines"
          echo "First 5 lines:"
          head -5 "$CSV_FILE"

      - name: Inject synonyms into modules (dry-run)
        if: github.event.inputs.test_mode == 'true'
        run: |
          CSV_FILE="${{ github.event.inputs.csv_file || 'term_synonyms.csv' }}"
          echo "Running in test mode - dry run only"
          python utils/inject_synonyms.py --csv "$CSV_FILE" --modules-dir modules --dry-run || true

      - name: Inject synonyms into modules
        if: github.event.inputs.test_mode != 'true'
        run: |
          CSV_FILE="${{ github.event.inputs.csv_file || 'term_synonyms.csv' }}"
          echo "Injecting synonyms from $CSV_FILE into modules directory..."
          python utils/inject_synonyms.py --csv "$CSV_FILE" --modules-dir modules

      - name: Check if changes were made
        id: check_changes
        run: |
          # Check if any module files were modified
          if git diff --exit-code modules/ 2>/dev/null; then
            echo "No changes made to module files"
            echo "changes_made=false" >> $GITHUB_OUTPUT
            echo "changes_made=false" >> $GITHUB_ENV
          else
            echo "Changes detected in module files"
            git diff --stat modules/ || true
            echo "changes_made=true" >> $GITHUB_OUTPUT
            echo "changes_made=true" >> $GITHUB_ENV
            
            # Show a summary of changes
            echo "Modified files:"
            git diff --name-only modules/
            echo ""
            echo "Change summary:"
            git diff --stat modules/
          fi

      - name: Create Pull Request with synonym injection
        if: steps.check_changes.outputs.changes_made == 'true' && github.event.inputs.test_mode != 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Inject synonyms into module files
            
            - Applied synonyms from ${{ github.event.inputs.csv_file || 'term_synonyms.csv' }}
            - Updated module YAML files with new aliases
            - Applied intelligent filtering to avoid duplicates
          title: "Inject synonyms: Update module files with synonym aliases"
          body: |
            ## 🔄 Synonym Injection Update
            
            This PR contains synonym aliases injected into module YAML files:
            
            ### Changes Made
            - **📁 Module Files**: Injected aliases into module YAML files in `modules/` directory
            - **📊 Source Data**: Used synonyms from `${{ github.event.inputs.csv_file || 'term_synonyms.csv' }}`
            - **🧹 Quality Filtering**: Applied intelligent deduplication and filtering
            
            ### Review Checklist
            - [ ] Review alias additions in modified module files
            - [ ] Verify no unwanted synonyms were added
            - [ ] Confirm aliases enhance searchability without adding noise
            - [ ] Check that existing aliases weren't removed unexpectedly
            
            ### Technical Details
            - Case-only differences filtered out (e.g., "3D imaging" vs "3-D Imaging")
            - Fuzzy matching applied to remove near-duplicates (90% similarity threshold)
            - Only high-quality aliases added to preserve metadata integrity
            - Existing aliases preserved unless they conflict
            
            ### Files Modified
            ```
            $(git diff --stat modules/)
            ```
            
            **Workflow Run**: ${{ github.run_id }}
            **Triggered by**: ${{ github.event_name }}
            **CSV Source**: ${{ github.event.inputs.csv_file || 'term_synonyms.csv' }}
          branch: synonym-injection-${{ github.run_id }}
          delete-branch: true
          labels: |
            automated
            synonyms
            injection

      - name: Workflow Summary
        if: always()
        run: |
          echo "## Synonym Injection Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          CSV_FILE="${{ github.event.inputs.csv_file || 'term_synonyms.csv' }}"
          
          if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
            echo "🧪 **Test Mode**: Dry-run completed" >> $GITHUB_STEP_SUMMARY
            echo "- 📊 CSV file: $CSV_FILE verified" >> $GITHUB_STEP_SUMMARY
            echo "- 📁 Module injection: Simulated only" >> $GITHUB_STEP_SUMMARY
            echo "- 🔄 No actual changes made" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.check_changes.outputs.changes_made }}" = "true" ]; then
            echo "✅ **Success**: Synonyms injected and PR created for review" >> $GITHUB_STEP_SUMMARY
            echo "- 📊 CSV file: $CSV_FILE processed" >> $GITHUB_STEP_SUMMARY
            echo "- 📁 Module files: Updated with new aliases" >> $GITHUB_STEP_SUMMARY
            echo "- 🔄 Pull Request: Created for review (branch: synonym-injection-${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **No Changes**: No synonym injection needed" >> $GITHUB_STEP_SUMMARY
            echo "- 📊 CSV file: $CSV_FILE processed successfully" >> $GITHUB_STEP_SUMMARY
            echo "- 📁 Module files: No updates required (synonyms already present)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- Run ID: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "- Trigger: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- CSV Source: $CSV_FILE" >> $GITHUB_STEP_SUMMARY
          echo "- Test Mode: ${{ github.event.inputs.test_mode }}" >> $GITHUB_STEP_SUMMARY
