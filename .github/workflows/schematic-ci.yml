name: schematic-ci

on:

  pull_request:   # default types: opened, synchronize, reopened
    branches: [main]
    paths:
      - 'modules/**'
  
  workflow_dispatch:

  
jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository

      - name: Setup custom build tools and make jsonld 
        shell: bash
        run: |
          bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
          git clone --depth 1 https://github.com/anngvu/retold.git
          make
    
      - name: Commit files
        run: |
          git config --local user.email "nf-osi@sagebionetworks.org"
          git config --local user.name "nf-osi[bot]"
          git add "NF.jsonld"
          git commit -m "Build jsonld"
    
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         branch: ${{ github.event.pull_request.head.ref }}

  # Additionally test PRs
  test:
    name: Test with schematic
    if: "!contains( github.event.pull_request.labels.*.name, 'skip tests')"
    needs: [build]
    runs-on: ubuntu-22.04
    env:
      SCHEMATIC_SERVICE_ACCT_CREDS: ${{ secrets.SCHEMATIC_SERVICE_ACCT_CREDS }}
    permissions:
      pull-requests: write
    strategy:
      matrix:
        schematic-version: [23.6.1]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 1

      - name: Setup schematic
        id: setup-schematic
        run: pip3 install schematicpy==${{ matrix.schematic-version }}

      - name: Test generate
        working-directory: tests/generate
        continue-on-error: true
        run: ./basic_templates.sh

      - name: Test validate
        working-directory: tests/validate
        continue-on-error: true
        run: ./run_config.sh

      # TODO Step for test submission of data
      
      - name: Create test suite report
        working-directory: tests
        continue-on-error: true
        run: docker run -v $(pwd):/tests rocker/tidyverse R -e "rmarkdown::render('tests/test-suite-report.Rmd')"

      - name: Report on test suite as PR comment
        uses: mshick/add-pr-comment@v2
        with:
          message-id: test-suite-report
          message-path: |
            tests/test-suite-report.md

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-logs-${{ matrix.schematic-version }}
          path: tests/**/logs
  
